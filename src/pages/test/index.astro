---
import {
  generateStarlightPageRouteData,
  type StarlightPageProps,
} from "node_modules/@astrojs/starlight/utils/starlight-page";
import VgvHeroArea from "~/components/vgv_hero_area/vgv-hero-area.astro";
import VgvPage from "~/components/vgv_page/vgv-page.astro";
export type Props = StarlightPageProps;

import CallToAction from "@astrojs/starlight/components/CallToAction.astro";
import Diagram from "~/components/diagram.astro";
import hero from "./very_good_engineering.png";

const props = await generateStarlightPageRouteData({
  props: {
    ...Astro.props,
    frontmatter: {
      title: "Very Good Engineering",
      tableOfContents: false,
      hero: {
        actions: [
          {
            text: "Read the Best Practices",
            link: "/architecture",
            icon: "right-arrow",
            variant: "primary",
          },
          {
            text: "Learn more about Very Good Ventures",
            link: "https://verygood.ventures",
            icon: "external",
          },
        ],
      },
    },

    hasSidebar: false,
  },
  url: Astro.url,
});

const actions = props.entry.data.hero?.actions ?? [];
---

<VgvPage {...props}>
  <VgvHeroArea>
    <Fragment slot="content">
      <div class="sl-flex stack">
        <h1
          class="title font-medium leading-[3rem] lg:leading-[4rem] text-4xl lg:text-5xl xl:text-6xl text-pretty text-center lg:text-start"
        >
          &#129412; Very Good<br />
          <span
            class="font-bold text-5xl lg:text-6xl xl:text-7xl text-balance text-center lg:text-start"
          >
            Engineering
          </span>
        </h1>
        <p
          class="subtitle text-lg mt-4 max-w-lg text-pretty text-center lg:text-start"
        >
          A comprehensive guide to building better software, faster.
        </p>
      </div>
    </Fragment>
    <div
      slot="actions"
      class="actions-container lg:min-w-[200%] justify-center lg:justify-start"
    >
      {
        actions.map(({ text, ...attrs }) => (
          <CallToAction {...attrs} set:html={text} />
        ))
      }
    </div>

    <div slot="graphic">
      <Diagram
        classes="max-w-[100%] lg:max-w-[inherit]"
        light={hero}
        dark={hero}
        alt="Hero image."
      />
    </div>
  </VgvHeroArea>
</VgvPage>

<style>
  .actions-container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    gap: 1rem;
    margin-top: 2rem;
  }

  .button {
    max-width: max-content;
    flex: 0 1 auto;
  }
</style>

<style>
  .title {
    /* Don't ever truncate a single letter. */
    min-width: max-content;
  }

  @media (min-width: 50rem) {
    .stack {
      text-align: start;
    }
  }

  .stack {
    flex-direction: column;
    gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
    text-align: center;
  }

  .subtitle {
    max-width: 100%;
  }
</style>
